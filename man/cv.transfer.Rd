% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{cv.transfer}
\alias{cv.transfer}
\title{Cross-validation}
\usage{
cv.transfer(
  target,
  source = NULL,
  prior = NULL,
  z = NULL,
  family,
  alpha,
  scale = "iso",
  sign = FALSE,
  select = TRUE,
  switch = TRUE,
  foldid.ext = NULL,
  nfolds.ext = 10,
  foldid.int = NULL,
  nfolds.int = 10,
  type.measure = "deviance",
  alpha.prior = NULL,
  partitions = NULL,
  monotone = NULL,
  naive = TRUE,
  diffpen = FALSE
)
}
\arguments{
\item{target}{list with slot x (feature matrix with n rows and p columns) and slot y (target vector of length n)}

\item{source}{list of k lists, each with slot x (feature matrix with m_i rows and p columns) and slot y (target vector of length m_i)}

\item{prior}{prior coefficients: matrix with \eqn{p} rows (features)
and \eqn{k} columns (sources of co-data)}

\item{z}{prior weights}

\item{family}{character "gaussian" (\eqn{y}: real numbers),
"binomial" (\eqn{y}: 0s and 1s),
or "poisson" (\eqn{y}: non-negative integers);}

\item{alpha}{elastic net mixing parameter (0=ridge, 1=lasso):
number between 0 and 1}

\item{scale}{character
"exp" for exponential scaling (3 parameters),
"iso" for isotonic scaling (1+\eqn{p} parameters),
or "sam" for shape-constrained additive scaling}

\item{sign}{sign discovery procedure: logical}

\item{select}{select from sources: logical}

\item{switch}{choose between positive and negative weights for each source: logical}

\item{foldid.ext}{external fold identifiers}

\item{nfolds.ext}{number of external folds}

\item{foldid.int}{internal fold identifiers}

\item{nfolds.int}{number of internal folds}

\item{type.measure}{character}

\item{alpha.prior}{alpha for source regression}

\item{partitions}{monotone: for GRridge}

\item{monotone}{logical}

\item{naive}{compare with naive transfer learning: logical}

\item{diffpen}{logical}
}
\description{
Performs external \eqn{k}-fold cross-validation
to estimate the predictive performance of different methods
}
\examples{
n <- 100; p <- 500
X <- matrix(rnorm(n=n*p),nrow=n,ncol=p)
beta <- rnorm(p)*rbinom(n=p,size=1,prob=0.2)
y <- X \%*\% beta
\dontshow{
object <- suppressMessages(cv.transfer(target=list(y=y,x=X),prior=beta,family="gaussian",alpha=0))}
\dontrun{
object <- cv.transfer(target=list(y=y,x=X),prior=beta,family="gaussian",alpha=0)}

}
